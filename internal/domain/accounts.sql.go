// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: accounts.sql

package domain

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO
    accounts (owner, balance, currency)
VALUES
    ($1, $2, $3) RETURNING id, owner, balance, currency, created_at, updated_at
`

type CreateAccountParams struct {
	Owner    string
	Balance  int32
	Currency string
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount, arg.Owner, arg.Balance, arg.Currency)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.Balance,
		&i.Currency,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getAccount = `-- name: GetAccount :one
SELECT
    id, owner, balance, currency, created_at, updated_at
FROM
    accounts
`

func (q *Queries) GetAccount(ctx context.Context) (Account, error) {
	row := q.db.QueryRowContext(ctx, getAccount)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.Balance,
		&i.Currency,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
